{
  "collection": {
    "blocks": {
      "export-result": {
        "name": "Export result",
        "description": "Export the collection result as JSON"
      }
    }
  },
  "workflow": {
    "blocks": {
      "base": {
        "title": "Blocks",
        "moveToGroup": "Move block to blocks group",
        "selector": "Element selector",
        "selectorOptions": "Selector options",
        "timeout": "Timeout (milliseconds)",
        "noPermission": "Automa don't have enough permission to do this action",
        "grantPermission": "Grant permission",
        "settings": {
          "title": "Block settings",
          "line": {
            "title": "Lines",
            "label": "Line label",
            "animated": "Animated",
            "select": "Select line",
            "to": "Line to {name} block",
            "lineColor": "Line color"
          }
        },
        "toggle": {
          "enable": "Enable block",
          "disable": "Disable block",
        },
        "onError": {
          "info": "These rules will apply when an error occurs on the block",
          "button": "On error",
          "title": "On error occurs",
          "retry": "Retry action",
          "fallbackTitle": "Will execute when an error occurs in the block",
          "times": {
            "name": "Times",
            "description": "The number of times to retry the action",
          },
          "interval": {
            "name": "Interval",
            "description": "The time interval to wait between each try",
            "second": "second"
          },
          "toDo": {
            "error": "Throw error",
            "continue": "Continue flow",
            "fallback": "Execute fallback",
            "restart": "Restart flow"
          }
        },
        "table": {
          "checkbox": "Insert to table",
          "select": "Select column",
          "extraRow": {
            "checkbox": "Add extra row",
            "placeholder": "Value",
            "title": "Value of the extra row"
          }
        },
        "findElement": {
          "placeholder": "Find element by",
          "options": {
            "cssSelector": "CSS Selector",
            "xpath": "XPath"
          }
        },
        "markElement": {
          "title": "An element will not be selected if have been selected before",
          "text": "Mark element"
        },
        "multiple": {
          "title": "Select multiple element",
          "text": "Multiple"
        },
        "waitSelector": {
          "title": "Wait for selector",
          "timeout": "Selector timeout (ms)"
        },
        "downloads": {
          "onConflict": {
            "uniquify": "Uniquify",
            "overwrite": "Overwrite",
            "prompt": "Prompt"
          }
        }
      },
      "wait-connections": {
        "name": "Wait connections",
        "description": "Wait for all connections before continuing to the next block",
        "specificFlow": "Only continue a specific flow",
        "selectFlow": "Select flow"
      },
      "slice-variable": {
        "name": "Slice variable",
        "description": "Extracts a section of a variable value",
        "start": "Start index",
        "end": "End index"
      },
      "regex-variable": {
        "name": "RegEx variable",
        "description": "Matching a variable value against a regular expression"
      },
      "data-mapping": {
        "source": "Source",
        "destination": "Destination",
        "name": "Data mapping",
        "edit": "Edit data map",
        "dataSource": "Data source",
        "description": "Map data of a variable or table",
        "addSource": "Add source",
        "addDestination": "Add destination"
      },
      "sort-data": {
        "name": "Sort data",
        "description": "Sort the items of data",
        "property": "Sort by the item's property",
        "addProperty": "Add property"
      },
      "increase-variable": {
        "name": "Increase variable",
        "description": "Increase the value of a variable by specific amount",
        "increase": "Increase by"
      },
      "notification": {
        "name": "notification",
        "description": "Display a notification",
        "title": "Title",
        "message": "Message",
        "imageUrl": "Image URL (optional)",
        "iconUrl": "Icon URL (optional)"
      },
      "delete-data": {
        "name": "Delete data",
        "description": "Delete table or variable data",
        "from": "Data from",
        "allColumns": "[All columns]"
      },
      "log-data": {
        "name": "Get log data",
        "description": "Get the latest log data of a workflow",
        "data": "Log data"
      },
      "tab-url": {
        "name": "Get tab URL",
        "description": "Get the tab URL",
        "select": "Select tab",
        "types": {
          "active-tab": "Active tab",
          "all": "All tabs"
        }
      },
      "reload-tab": {
        "name": "Reload tab",
        "description": "Reload the active tab"
      },
      "press-key": {
        "name": "Press key",
        "description": "Press a key or a combination",
        "target": "Target element (optional)",
        "key": "Key",
        "detect": "Detect key"
      },
      "save-assets": {
        "name": "Save assets",
        "description": "Save assets (image, video, audio, or file) from an element or URL",
        "filename": "Filename (optional)",
        "contentTypes": {
          "title": "Type",
          "element": "Media element (image, audio, or video)",
          "url": "URL"
        }
      },
      "handle-dialog": {
        "name": "Handle dialog",
        "description": "Accepts or dismisses a JavaScript initiated dialog (alert, confirm, prompt, or onbeforeunload).",
        "accept": "Accept dialog",
        "promptText": {
          "label": "Prompt text (optional)",
          "description": "The text to enter into the dialog prompt before accepting"
        }
      },
      "handle-download": {
        "name": "Handle download",
        "description": "Handle downloaded file",
        "timeout": "Timeout (milliseconds)",
        "noPermission": "Don't have permission to access the downloads",
        "onConflict": "On conflict",
        "waitFile": "Wait for the file to be downloaded"
      },
      "insert-data": {
        "name": "Insert data",
        "description": "Insert data into table or variable"
      },
      "clipboard": {
        "name": "Clipboard",
        "description": "Get the copied text from the clipboard",
        "data": "Clipboard data",
        "noPermission": "Don't have permission to access the clipboard",
        "grantPermission": "Grant permission",
        "copySelection": "Copy the selected text on page",
        "types": {
          "get": "Get clipboard data",
          "insert": "Insert text to clipboard"
        }
      },
      "hover-element": {
        "name": "Hover element",
        "description": "Hover over an element"
      },
      "upload-file": {
        "name": "Upload file",
        "description": "Upload file into <input type=\"file\"> element",
        "filePath": "URL or File path",
        "addFile": "Add file",
        "onlyURL": "Only support upload files from an URL in the Firefox browser",
        "requirement": "See the requirement before using this block",
        "noFileAccess": "Automa doesn't have file access"
      },
      "browser-event": {
        "name": "Browser event",
        "description": "Execute the next block when the event is triggered",
        "events": "Events",
        "timeout": "Timeout (milliseconds)",
        "activeTabLoaded": "Active tab",
        "setAsActiveTab": "Set as active tab"
      },
      "blocks-group-2": {
        "name": "@:workflow.blocks.blocks-group.name 2",
        "description": "@:workflow.blocks.blocks-group.description"
      },
      "blocks-group": {
        "name": "Blocks group",
        "groupName": "Group name",
        "description": "Grouping blocks",
        "dropText": "Drag & drop a block here",
        "cantAdd": "Can't add \"{blockName}\" block to the group."
      },
      "trigger": {
        "name": "Trigger",
        "description": "Block where the workflow will start executing",
        "addTime": "Add time",
        "selectDay": "Select day",
        "timeExist": "You alread add {time} on {day}",
        "fixedDelay": "Fixed delay",
        "contextMenus": {
          "noPermission": "This trigger requires \"contextMenus\" permission to be working",
          "grantPermission": "Grant permission",
          "appearIn": "Will appear in",
          "contextName": "Workflow name in the context menu"
        },
        "days": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "useRegex": "Use regex",
        "shortcut": {
          "tooltip": "Record shortcut",
          "stopRecord": "Stop recording",
          "checkboxTitle": "Execute shortcut even when you're in an input element",
          "checkbox": "Active while in input",
          "note": "Note: keyboard shortcut only working when you're on a webpage"
        },
        "forms": {
          "triggerWorkflow": "Trigger workflow",
          "interval": "Interval (minutes)",
          "delay": "Delay (minutes)",
          "date": "Date",
          "time": "Time",
          "url": "URL or Regex",
          "shortcut": "Shortcut"
        },
        "element-change": {
          "target": "Target element to observe",
          "optionsInfo": "Which element mutation will trigger the workflow",
          "targetWebsite": "The Match Pattern of the website where the target element is (click to see more Match Pattern examples)",
          "baseEl": {
            "title": "Base element (optional)",
            "description": "Automa will restart observing the target element when this element changed"
          },
          "subtree": {
            "title": "Include subtree",
            "description": "Extend monitoring to the entire subtree of the target element"
          },
          "childList": {
            "title": "Child list",
            "description": "Monitor for the addition of new child elements or removal of existing child elements"
          },
          "attributes": {
            "title": "Attributes",
            "description": "Watch for changes to the value of attributes on the target element"
          },
          "attributeFilter": {
            "title": "Attribute filter",
            "separate": "Use commas(,) to separate attribute name",
            "description": "Only monitor specific attributes (leave blank to monitor all)"
          },
          "characterData": {
            "title": "Character data",
            "description": "Monitor changes to the character data/text within the target element"
          },
        },
        "items": {
          "manual": "Manually",
          "interval": "Interval",
          "date": "On a specific date",
          "context-menu": "Context menu",
          "element-change": "When element change",
          "specific-day": "On a specific day",
          "visit-web": "When visit a website",
          "on-startup": "On browser startup",
          "keyboard-shortcut": "Keyboard shortcut"
        }
      },
      "execute-workflow": {
        "name": "Execute workflow",
        "overwriteNote": "This will overwrite the global data of the selected workflow",
        "select": "Select workflow",
        "executeId": "Execute Id (optional)",
        "description": ""
      },
      "google-sheets": {
        "name": "Google sheets",
        "description": "Read or update Google Sheets data",
        "previewData": "Preview data",
        "firstRow": "Use the first row as keys",
        "keysAsFirstRow": "Use keys as the first row",
        "insertData": "Insert data",
        "valueInputOption": "Value input option",
        "insertDataOption": "Insert data option",
        "rangeToSearch": "Range to start the search",
        "dataFrom": {
          "label": "Data from",
          "options": {
            "data-columns": "Table",
            "custom": "Custom"
          }
        },
        "refKey": {
          "label": "Reference key (optional)",
          "placeholder": "Key name"
        },
        "spreadsheetId": {
          "label": "Spreadsheet Id",
          "link": "See how to get spreadsheet Id"
        },
        "range": {
          "label": "Range",
          "link": "Click to see more example"
        },
        "select": {
          "get": "Get spreadsheet cell values",
          "getRange": "Get spreadsheet range",
          "update": "Update spreadsheet cell values",
          "append": "Append spreadsheet cell values"
        }
      },
      "active-tab": {
        "name": "Active tab",
        "description": "Set current tab that you're in as an active tab"
      },
      "proxy": {
        "name": "Proxy",
        "description": "Set the proxy of the browser",
        "clear": "Clear all proxy",
        "bypass": {
          "label": "Bypass list",
          "note": "Use commas (,) to separate URL"
        }
      },
      "new-window": {
        "name": "New window",
        "description": "Create a new window",
        "top": "Top",
        "left": "Left",
        "height": "Height",
        "width": "Width",
        "note": "Note: use 0 to disable",
        "position": "Window position",
        "size": "Window size",
        "windowState": {
          "placeholder": "Window state",
          "options": {
            "normal": "Normal",
            "minimized": "Minimized",
            "maximized": "Maximized",
            "fullscreen": "Fullscreen"
          }
        },
        "incognito": {
          "text": "Set as incognito window",
          "note": "You must enable 'Allow in incognito' for this extension to use the option"
        }
      },
      "go-back": {
        "name": "Go back",
        "description": "Go back to the previous page"
      },
      "forward-page": {
        "name": "Go forward",
        "description": "Go forward to the next page"
      },
      "close-tab": {
        "name": "Close tab/window",
        "description": "",
        "url": "Match Patterns",
        "activeTab": "Close active tab",
        "allWindows": "Close all windows"
      },
      "event-click": {
        "name": "Click element",
        "description": ""
      },
      "delay": {
        "name": "Delay",
        "description": "Add delay before executing the next block",
        "input": {
          "title": "Delay in millisecond",
          "placeholder": "(millisecond)"
        }
      },
      "get-text": {
        "name": "Get text",
        "description": "Get text from an element",
        "checkbox": "Insert to table",
        "includeTags": "Include HTML tags",
        "prefixText": {
          "placeholder": "Text prefix",
          "title": "Add prefix to the text"
        },
        "suffixText": {
          "placeholder": "Text suffix",
          "title": "Add suffix to the text"
        }
      },
      "export-data": {
        "name": "Export data",
        "description": "Export workflow data",
        "exportAs": "Export as",
        "refKey": "Reference key",
        "bomHeader": "Add UTF-8 BOM",
        "dataToExport": {
          "placeholder": "Data to export",
          "options": {
            "data-columns": "Table",
            "google-sheets": "Google sheets",
            "variable": "Variable"
          },
        }
      },
      "element-scroll": {
        "name": "Scroll element",
        "description": "",
        "scrollY": "Scroll vertical",
        "scrollX": "Scroll horizontal",
        "intoView": "Scroll into view",
        "smooth": "Smooth scroll",
        "incScrollX": "Increment horizontal scroll",
        "incScrollY": "Increment vertical scroll"
      },
      "switch-tab": {
        "name": "Switch tab",
        "description": "Switch between tab",
        "matchPattern": "Match Patterns",
        "url": "URL for the new tab",
        "createIfNoMatch": "Create if there's no match"
      },
      "new-tab": {
        "name": "New tab",
        "description": "",
        "url": "New Tab URL",
        "customUserAgent": "Use custom User-Agent",
        "activeTab": "Set as active tab",
        "tabToGroup": "Add tab to group",
        "waitTabLoaded": "Wait till tab loaded",
        "updatePrevTab": {
          "title": "Use the previously opened new tab instead of creating a new one",
          "text": "Update previously opened tab"
        }
      },
      "link": {
        "name": "Link",
        "description": "Open link element"
      },
      "attribute-value": {
        "name": "Attribute value",
        "description": "Get value of an element attribute",
        "forms": {
          "name": "Attribute name",
          "checkbox": "Insert to table",
          "column": "Select column",
          "extraRow": {
            "checkbox": "Add extra row",
            "placeholder": "Value",
            "title": "Value of the extra row"
          }
        }
      },
      "forms": {
        "name": "Forms",
        "description": "",
        "selected": "Selected",
        "type": "Form type",
        "getValue": "Get form value",
        "text-field": {
          "name": "Text field",
          "value": "Value",
          "clearValue": "Clear form value",
          "delay": {
            "placeholder": "Delay",
            "label": "Typing delay (millisecond)(0 to disable)"
          }
        },
        "select": {
          "name": "Select"
        },
        "radio": {
          "name": "Radio"
        },
        "checkbox": {
          "name": "Checkbox"
        }
      },
      "repeat-task": {
        "name": "Repeat task",
        "description": "",
        "times": "times",
        "repeatFrom": "Repeat from"
      },
      "javascript-code": {
        "name": "JavaScript code",
        "description": "Execute your javascript code in the web page",
        "availabeFuncs": "Available functions:",
        "removeAfterExec": "Remove after block executed",
        "everyNewTab": "Execute every new tab",
        "modal": {
          "tabs": {
            "code": "JavaScript code",
            "preloadScript": "Preload script"
          }
        },
        "timeout": {
          "placeholder": "Timeout (milliseconds)",
          "title": "Javascript code execution timeout"
        }
      },
      "trigger-event": {
        "name": "Trigger event",
        "description": "",
        "selectEvent": "Select event"
      },
      "conditions": {
        "name": "Conditions",
        "add": "Add condition",
        "retryConditions": "Retry if all conditions are not met",
        "description": "Conditional block",
        "refresh": "Refresh conditions connections",
        "fallbackTitle": "Execute when all comparisons don't meet the requirement",
        "equals": "Equals",
        "gt": "Greater than",
        "gte": "Greater than or equal",
        "lt": "Less than",
        "lte": "Less than or equal",
        "ne": "Not equals",
        "contains": "Contains"
      },
      "element-exists": {
        "name": "Element exists",
        "description": "Check if an element is exists",
        "selector": "Element selector",
        "fallbackTitle": "Execute when element doesn't exists",
        "throwError": "Throw an error if doesn't exist",
        "tryFor": {
          "title": "How many times to try to check if element exist",
          "label": "Try for"
        },
        "timeout": {
          "label": "Timeout (milliseconds)",
          "title": "Timeout for each try"
        }
      },
      "webhook": {
        "name": "HTTP request",
        "description": "Make an HTTP Request",
        "url": "The Post receive URL",
        "contentType": "Content type",
        "method": "Request method",
        "url": "Request URL",
        "fallback": "Execute when failed or error making an HTTP request",
        "buttons": {
          "header": "Add header"
        },
        "timeout": {
          "placeholder": "Timeout",
          "title": "Http request execution timeout(ms)"
        },
        "tabs": {
          "headers": "Headers",
          "body": "Body",
          "response": "Response"
        }
      },
      "while-loop": {
        "name": "While loop",
        "description": "Execute blocks while the condition is met",
        "editCondition": "Edit condition",
        "fallback": "Execute when the condition is false"
      },
      "loop-data": {
        "name": "Loop data",
        "description": "Iterate through table or your custom data",
        "loopId": "Loop id",
        "refKey": "Reference key",
        "startIndex": "Start from index",
        "resumeLastWorkflow": "Resume last workflow",
        "modal": {
          "fileTooLarge": "File too large to edit",
          "maxFile": "Max file size is 1MB",
          "options": {
            "firstRow": "Use the first row as keys"
          }
        },
        "buttons": {
          "clear": "Clear data",
          "insert": "Insert data",
          "import": "Import file"
        },
        "maxLoop": {
          "title": "Max numbers of data to loop",
          "label": "Max data to loop (0 to disable)"
        },
        "loopThrough": {
          "placeholder": "Loop through",
          "fromNumber": "From number",
          "toNumber": "To number",
          "options": {
            "numbers": "Numbers",
            "variable": "Variable",
            "data-columns": "Table",
            "table": "Table",
            "custom-data": "Custom data",
            "google-sheets": "Google sheets",
            "elements": "Elements"
          }
        }
      },
      "loop-breakpoint": {
        "name": "Loop breakpoint",
        "description": "To tell where loop data block must stop"
      },
      "take-screenshot": {
        "name": "Take screenshot",
        "fullPage": "Take full page screenshot",
        "description": "Take a screenshot of current active tab",
        "imageQuality": "Image quality",
        "saveToColumn": "Insert screenshot to table",
        "saveToComputer": "Save screenshot to computer",
        "types": {
          "title": "Take a screenshot of",
          "page": "Page",
          "fullpage": "Full page",
          "element": "An element"
        }
      },
      "switch-to": {
        "name": "Switch frame",
        "description": "Switch between main window and iframe",
        "iframeSelector": "Iframe element selector",
        "windowTypes": {
          "main": "Main window",
          "iframe": "Iframe"
        }
      }
    }
  }
}
